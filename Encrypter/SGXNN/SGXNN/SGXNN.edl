

enclave {
    
    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
	 *   

     *  [*]: implies to import all functions.
     */
        from "sgx_tstdc.edl" import *;
		 include "../../App/App/App.h"
    trusted {
        public void printf_helloworld();
        public void init_array();
        public int input([in,size=813] char *data);
        public int learning_process();
        public double square_error();
        public void save_nn();
        public void load_model();
        public int predict();
        public void decryptMessage([in,size=len] char *encMessageIn, size_t len, [out,size=lenOut] char *decMessageOut, size_t lenOut);
        public void encryptMessage([in,size=len] char *decMessageIn, size_t len, [out,size=lenOut] char *encMessageOut, size_t lenOut);
    };

    /* 
     * ocall_print_string - invokes OCALL to display string buffer inside the enclave.
     *  [in]: copy the string buffer to App outside.
     *  [string]: specifies 'str' is a NULL terminated buffer.
     */
    untrusted {
        void print_error_message(sgx_status_t ret);
        void ocall_print_string([in, string] const char *str);
        void ocall_print_num(uint32_t num);
        void ocall_read_image([out] char *number);
        void ocall_read_label([out] char *number);
        //void ocall_read_one([out] char *data);
        int ocall_save_nn([in, size=sealed_size]const uint8_t* sealed_data, size_t sealed_size);
        int ocall_load_nn([out, size=sealed_size]uint8_t* sealed_data, size_t sealed_size);
    };

};
